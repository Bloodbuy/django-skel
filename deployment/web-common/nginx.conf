user www-data;
daemon  off; #for supervisord daemon processing
worker_processes   2;
pid /var/log/supervisor/nginx/nginx.pid;

events {
    worker_connections  1024;
}

http {
    client_max_body_size 1000m;

    include /etc/nginx/mime.types;
    default_type  text/plain;
    server_tokens off;


    ## Django API server
    upstream django {
        server 127.0.0.1:8100   max_fails=3  fail_timeout=30s;
    }

    log_format combined_w_req_time '$remote_addr $request_time $upstream_response_time  $remote_user [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    log_format combined_w_req_time_upstream '$http_x_real_ip $request_time $upstream_response_time $remote_user [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    access_log   /var/log/supervisor/nginx/access.log  combined_w_req_time;
    error_log    /var/log/supervisor/nginx/error.log;     


    ##### Return 444 (i.e. No response) for unexpected Host
    #server {
    #    listen      80 default;
    #    return      444;
    #}


    ####################### DJANGO SERVER START
    server {
        listen       80;
        server_name  default;

        #compute the proxied request scheme
        set $original_scheme $scheme;
        if ($http_x_forwarded_proto) {
           set $original_scheme $http_x_forwarded_proto;
        }
        
        set $redirect_to_https "";

        #redirect to https is not already, for all servers except staging
        if ($host ~* {{ project_name }}\.com) {
             set $redirect_to_https  "Y";
        }
        if ($original_scheme != "https") {
             set $redirect_to_https  "${redirect_to_https}O";
        }
        #redirect to https is not already.
        if ($redirect_to_https = "YO") {
            rewrite ^ https://$host$request_uri? permanent;
        }

        access_log   /var/log/supervisor/nginx/dj_access.log  combined_w_req_time;
        error_log    /var/log/supervisor/nginx/dj_error.log;

        #Pass to uwsgi
        location / {
            proxy_pass http://django;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }


    ####################### redirecting to non "www" request
    server {
    listen 80;
        server_name  www.{{ project_name }}.com;
        rewrite ^(.*)$ http://{{ project_name }}.com$1 permanent;
    }


    ####################### Static serving and uwsgi
    server {
        listen       127.0.0.1:8100;
        server_name  default;

        ## Static
        gzip            on;
        gzip_types      text/css application/x-javascript text/javascript text/xml text/html;
        gzip_min_length 1300; # if it fits in one packet don't compress                    

        #django app static files
        location /static/  {
            access_log /var/log/supervisor/nginx/dj_static_access.log  combined_w_req_time_upstream;
            error_log  /var/log/supervisor/nginx/dj_static_error.log;
            autoindex   off;

            keepalive_timeout  25;
            sendfile    on;
            
            alias /web/dj/{{ project_name }}/{{ project_name }}/static/;
        }

        #django app media files
        location /media/  {
            access_log /var/log/supervisor/nginx/dj_static_access.log  combined_w_req_time_upstream;
            error_log  /var/log/supervisor/nginx/dj_static_error.log;
            autoindex   off;

            keepalive_timeout  25;
            sendfile    on;
            
            alias /web/dj/{{ project_name }}/{{ project_name }}/media/;
        }

        location / {
            set $uwsgi_script "wsgi";
            set $script_name "/";
            set $socket "dj_uwsgi.sock";
            
            #client_max_body_size 1000m;
            access_log /var/log/supervisor/nginx/dj_django_access.log  combined_w_req_time_upstream;
            error_log /var/log/supervisor/nginx/dj_django_error.log;
            keepalive_timeout  0;

            # host and port to uwsgi server
            uwsgi_pass   unix:///tmp/$socket;
            uwsgi_param  UWSGI_SCRIPT $uwsgi_script;
            uwsgi_param  SCRIPT_NAME $script_name;

            uwsgi_pass_header Authorization;
            include /etc/nginx/uwsgi_params;

            #fix redirect issue to proxy port
            uwsgi_param SERVER_PORT 80;

            #set correct scheme
            uwsgi_param UWSGI_SCHEME $http_x_forwarded_proto;

            uwsgi_intercept_errors off;
        }

    }
    
    ####################### DJANGO SERVER END

}
